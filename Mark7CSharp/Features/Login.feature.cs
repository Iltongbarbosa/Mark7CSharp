// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Mark7CSharp.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Login")]
    [NUnit.Framework.CategoryAttribute("Login")]
    public partial class LoginFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Login.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "Login", "    Para que somente eu possa ver as minhas tarefas\r\n    Sendo um usuário cadastr" +
                    "ado\r\n    Posso logar no sistema", ProgrammingLanguage.CSharp, new string[] {
                        "Login"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login com sucesso")]
        [NUnit.Framework.CategoryAttribute("loginComSucesso")]
        public virtual void LoginComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login com sucesso", null, new string[] {
                        "loginComSucesso"});
#line 10
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
   testRunner.When("faço login com \'ilton.io@ninja.com.br\' e \'pwd123\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 12
   testRunner.Then("sou redirecionado para o painel de tarefas com a mensagem \'Hello, ilton\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tentativa de logar")]
        [NUnit.Framework.CategoryAttribute("LiginInvalido")]
        [NUnit.Framework.TestCaseAttribute("\'ilton.io@ninja.com.br\'", "\'pwd321\'", "\'Incorrect password\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'joao.das.neves@dancadascadeiras.org\'", "\'pwd123\'", "\'User not found\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'ilton&qaninja.io\'", "\'pwd123\'", "\'Email is required\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'\'", "\'pwd123\'", "\'Email is required\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'ilton.io@ninja.com.br\'", "\'\'", "\'Password is required\'", null)]
        public virtual void TentativaDeLogar(string email, string senha, string saida, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LiginInvalido"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tentativa de logar", null, @__tags);
#line 15
    this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
        testRunner.When(string.Format("faço login com {0} e {1}", email, senha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 17
        testRunner.Then(string.Format("devo ver a mensagem de alerta {0}", saida), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

