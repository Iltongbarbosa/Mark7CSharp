// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Mark7CSharp.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Remover uma tarefa")]
    [NUnit.Framework.CategoryAttribute("RemoverTarefas")]
    public partial class RemoverUmaTarefaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RemoverTarefas.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "Remover uma tarefa", "    Para que eu possa deixar meu painel organizado\r\n    Sendo um usuário que poss" +
                    "ui uma tarefa indesejada\r\n    Posso excluir tarefas", ProgrammingLanguage.CSharp, new string[] {
                        "RemoverTarefas"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 10
 #line 11
  testRunner.Given("que faço login com \'ilton.io@ninja.com.br\' e \'pwd123\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apagar uma tarefa")]
        [NUnit.Framework.CategoryAttribute("RemoverTarefa")]
        public virtual void ApagarUmaTarefa()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apagar uma tarefa", null, new string[] {
                        "RemoverTarefa"});
#line 14
    this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
 this.FeatureBackground();
#line 15
        testRunner.Given("que tenho uma tarefa indesejada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 16
        testRunner.When("eu solicito a exclusão desta tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 17
        testRunner.And("confirmo a ação de exclusão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
        testRunner.Then("esta tarefa não deve ser exibida na lista", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Desistir da remoção")]
        [NUnit.Framework.CategoryAttribute("DesistirRemocao")]
        public virtual void DesistirDaRemocao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Desistir da remoção", null, new string[] {
                        "DesistirRemocao"});
#line 21
    this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
 this.FeatureBackground();
#line 22
        testRunner.Given("que tenho uma tarefa indesejada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 23
        testRunner.When("eu solicito a exclusão desta tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 24
        testRunner.But("eu cancelo esta ação", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Mas ");
#line 25
        testRunner.Then("esta tarefa permanece na lista", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

